---
#@ load("funcs.lib.yml", "slack_hook")
#@ load("@ytt:data", "data")
#@ load("@ytt:template", "template")

#!  SHARED

test-redirects: &test-redirects
  - task: install-dependencies
    image: node
    file: src/ci/partials/install-dependencies.yml

  - task: build
    image: node
    file: src/ci/partials/build.yml

  - task: test-redirects
    image: dind
    privileged: true
    file: src/ci/partials/test-redirects.yml

#!  JOBS

jobs:
  - name: test-redirects-pull-request
    plan:
      - get: src
        passed: [set-pipeline]
        resource: pr
        trigger: true
        version: every
      - put: src
        resource: pr
        params:
          path: src
          status: pending
          base_context: concourse
          context: test-pull-request
      - get: node
      - get: dind
      - do: *test-redirects

    on_failure:
      in_parallel:
        - put: src
          resource: pr
          params:
            path: src
            status: failure
            base_context: concourse
            context: test-pull-request
        -  #@ slack_hook("failure", "tests")

    on_success:
      in_parallel:
        - put: src
          resource: pr
          params:
            path: src
            status: success
            base_context: concourse
            context: test-pull-request
        -  #@ slack_hook("success", "tests")

  - name: test-and-deploy-redirects
    plan:
      - get: src
        resource: src
        trigger: true
        params: { depth: 1 }
      - get: pipeline-tasks
      - get: general-task
      - get: node
      - get: dind
      - do: *test-redirects
      - task: deploy
        image: general-task
        file: src/ci/partials/deploy.yml
        params:
          _: #@ template.replace(data.values.env_cf_redirects)
          CF_MANIFEST: src/out/manifest-prod.yml
          CF_PATH: src/out
        on_failure:
          try:
            task: cancel-api-deployment
            image: general-task
            file: pipeline-tasks/tasks/cancel-deployment.yml
            params:
              _: #@ template.replace(data.values.env_cf_redirects)

    on_failure: #@ slack_hook("failure", "deployment")
    on_success: #@ slack_hook("success", "deployment")

  - name: nightly-restage-redirects
    plan:
      - get: src
        resource: src
        params: { depth: 1 }
      - get: nightly
        trigger: true
      - get: general-task
      - get: pipeline-tasks
      - task: restage
        image: general-task
        file: pipeline-tasks/tasks/restage.yml
        params:
          _: #@ template.replace(data.values.env_cf_redirects)

  - name: set-pipeline
    plan:
      - get: src
        resource: pr
        trigger: true
      - get: pipeline-tasks
      - get: general-task
      - task: init
        image: general-task
        file: pipeline-tasks/tasks/init.yml
        params:
          PIPELINE_YML: src/ci/pipeline.yml
      - set_pipeline: redirects
        file: compiled/set-pipeline.yml
        instance_vars:
          deploy-env: ((deploy-env))

#!  RESOURCES

resources:
  - name: pr
    type: pull-request
    check_every: 1m
    source:
      repository: cloud-gov/pages-redirects
      access_token: ((gh-access-token))
      base_branch: main
      disable_forks: true
      ignore_drafts: false

  - name: src
    type: git
    icon: github
    source:
      uri: https://github.com/cloud-gov/pages-redirects
      branch: main
      commit_verification_keys: ((cloud-gov-pages-gpg-keys))

  - name: nightly
    type: time
    source:
      start: 12:00 AM
      stop: 1:00 AM
      location: America/New_York

  - name: slack
  - name: node
  - name: general-task
  - name: dind
  - name: pipeline-tasks

#!  RESOURCE TYPES

resource_types:
  - name: git
  - name: slack-notification
  - name: pull-request
  - name: time
  - name: registry-image
